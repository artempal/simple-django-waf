version: '3.7'
services:
  web:
    build: .
    entrypoint: /usr/src/app/entrypoint-waf.sh
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/usr/src/app/
    ports:
      - $TEMPLATE_ADMIN_CONSOLE_PORT:8000
    env_file:
      - .env
  proxy:
    build: .
    entrypoint: /usr/src/app/entrypoint-proxy.sh
    command: python waf.py
    volumes:
      - .:/usr/src/app/
    ports:
      - $TEMPLATE_PROXY_PORT:$TEMPLATE_PROXY_PORT
    env_file:
      - .env
    restart: always
  haproxy:
    image: "haproxy:2.2-alpine"
    ports:
      - $TEMPLATE_HAPROXY_PORT:80
      - $TEMPLATE_HAPROXY_STATS_PORT:8080
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
      - ./cert:/etc/ssl/certs/
  grafana:
    image: grafana/grafana
    ports:
      - $TEMPLATE_GRAFANA_PORT:3000
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources/
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards/
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-piechart-panel,redis-datasource
  redis:
    image: redis:alpine
    command: redis-server --requirepass $TEMPLATE_REDIS_PASSWORD
    ports:
      - "6379:6379"
    restart: always
    env_file:
      - .env
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=$TEMPLATE_POSTGRES_USER
      - POSTGRES_PASSWORD=$TEMPLATE_POSTGRES_PASSWORD
      - POSTGRES_DB=$TEMPLATE_POSTGRES_DBNAME
    ports:
      - 5432:5432
volumes:
  postgres_data: